apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: demo-sync
spec:
  serviceName: demo-sync-headless
  replicas: 2
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        cluster: demo-sync
      annotations:
        ad.datadoghq.com/demo-sync.logs: '[{"source":"nifi", "service":"demo-sync", "sourcecategory":"sourcecode", "log_processing_rules":[{"type": "multi_line","name": "parsing_pattern","pattern": "^\\s{0,1}(INFO|ERROR|WARN|DEBUG|[0-9]{3}.|\\[)"}]}]'
        ad.datadoghq.com/demo-sync.check_names: '["prometheus"]'
        ad.datadoghq.com/demo-sync.init_configs: '[{}]'
        ad.datadoghq.com/demo-sync.instances: '[{"prometheus_url": "http://%%host%%:8079/metrics", "namespace": "nifi", "metrics": [ "*"], "tags": ["hostname:%%host%%"]}]'
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "cluster"
                    operator: In
                    values:
                    - demo-sync
              topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
      - name: aws-ecr-registry
      containers:
      - name: demo-sync
        image: demo.demous-west-2.amazonaws.com/devops/nifi-1.7.0:v16-stateful
        env:
        - name: CLUSTER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
          - "/bin/sh"
          - "-c"
          - >
            set -x;
            chmod +x /opt/deploy/configure_statefulset.sh;
            /opt/deploy/configure_statefulset.sh;
            sed -i -e "s|        <property name=\"Root Node\">.*$|        <property name=\"Root Node\">/state-management</property>|" /opt/nifi/nifi-1.7.0/conf/state-management.xml;
            /opt/nifi/nifi-1.7.0/bin/nifi.sh run
        securityContext:
          privileged: true
        ports:
         - name: prometheus-jmx
           containerPort: 8079
         - name: web
           containerPort: 8080
         - name: cluster
           containerPort: 8082
         - name: misc
           containerPort: 9001
         - name: jmx
           containerPort: 30007
        livenessProbe:
           httpGet:
             path: /nifi
             port: 8080
           initialDelaySeconds: 120
           periodSeconds: 30
           timeoutSeconds: 5
           successThreshold: 1
           failureThreshold: 20
        readinessProbe:
           httpGet:
             path: /nifi
             port: 8080
           periodSeconds: 30
           initialDelaySeconds: 120
           timeoutSeconds: 5
           successThreshold: 1
           failureThreshold: 5
        volumeMounts:
          - name: repositories
            mountPath: /mnt
        resources:
          requests:
            cpu: 2
            memory: 16Gi
          limits:
            cpu: 2
            memory: 16Gi
  volumeClaimTemplates:
  - metadata:
      name: repositories
      annotations:
        volume.beta.kubernetes.io/storage-class: pure-file
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 25Gi
